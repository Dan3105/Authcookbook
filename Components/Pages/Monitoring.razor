@page "/monitoring"
@using AuthCookbook.Core.Models
@using AuthCookbook.Core.Services.Users
@inject IMonitoringService MonitoringService
@rendermode InteractiveServer

<PageTitle>Monitoring</PageTitle>

<h1>User Monitoring</h1>

<p>This page displays all registered users in the system.</p>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else if (users.Count == 0)
{
    <div class="alert alert-info">
        <strong>No users found.</strong> There are currently no registered users in the system.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th scope="col">ID</th>
                    <th scope="col">Username</th>
                    <th scope="col">Email</th>
                    <th scope="col">Password</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.Id</td>
                        <td>@user.Username</td>
                        <td>@user.Email</td>
                        <td>@user.HashPassword</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary" @onclick="() => ViewUserDetails(user.Id)">
                                View Details
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="mt-3">
        <p class="text-muted">Total users: @users.Count</p>
    </div>
}

@code {
    private List<UserIdentity>? users;

    protected override void OnInitialized()
    {
        LoadUsers();
    }

    private void LoadUsers()
    {
        try
        {
            users = MonitoringService.AllUsers();
        }
        catch (Exception ex)
        {
            // Log error or show error message
            Console.WriteLine($"Error loading users: {ex.Message}");
            users = new List<UserIdentity>();
        }
    }

    private void ViewUserDetails(Guid userId)
    {
        // Placeholder for future functionality
        // Could navigate to a user details page or show a modal
        Console.WriteLine($"View details for user: {userId}");
    }
}